---
- name: Install prerequisities
  package:
    name: '{{ item }}'
    state: present
  with_items: ['python-pip', 'python-dev']

- name: Install nginx
  package:
    name: 'nginx'
    state: 'present'

- name: Create deployers group
  group:
    name: deployers
    state: present

- name: Make sure there is a gitlab_deploy user
  user:
    name: gitlab_deploy
    comment: "Gitlab deploy user"
    groups: sudo,deployers
    shell: /bin/bash
    state: present

- name: Ensure .ssh folder for gitlab_deploy user
  file:
    path: '~gitlab_deploy/.ssh'
    state: directory
    owner: gitlab_deploy
    group: gitlab_deploy
    mode: 0700

- name: Copy public key for deploy user
  copy:
    content: '{{gitlab_pub_key}}'
    dest: ~gitlab_deploy/.ssh/authorized_keys
    owner: gitlab_deploy
    group: gitlab_deploy
    mode: 0644

- name: Copy public key for deploy user
  copy:
    content: '{{gitlab_priv_key}}'
    dest: ~gitlab_deploy/.ssh/id_rsa
    owner: gitlab_deploy
    group: gitlab_deploy
    mode: 0600

- include_tasks: ssl.yml
  when: wildfly__enable_ssl

- name: Create nginx config file
  template:
    src: templates/nginx_site.j2
    dest: /etc/nginx/sites-available/{{wildfly_app_name}}
  notify: restart nginx

- name: Disable default nginx site
  file:
    path: /etc/nginx/sites-enabled/default
    state: absent
  notify: restart nginx

- name: Enable nginx site
  file:
    path: /etc/nginx/sites-enabled/{{wildfly_app_name}}
    src: /etc/nginx/sites-available/{{wildfly_app_name}}
    state: link
  notify: restart nginx

- name: Create directory to install wildfly in
  file:
    path: "{{ wildfly_home }}"
    owner: "{{wildfly_user}}"
    group: "{{wildfly_group}}"
    state: directory
    mode: 0755

- name: install wildfly
  unarchive:
    src: "{{ wildfly_url }}"
    dest: "{{ wildfly_home }}"
    owner: "{{wildfly_user}}"
    group: "{{wildfly_group}}"
    remote_src: yes
    extra_opts: [--strip-components=1]
    creates: "{{ wildfly_home }}/bin/add-user.sh"

- name: Change ownership of WildFly installation
  file: path='{{ wildfly_home }}' owner='{{wildfly_user}}' group='{{wildfly_group}}' state=directory recurse=yes

- name: Create wildfly config
  template:
    src: wildfly_config.j2
    dest: /etc/default/wildfly
    owner: root
    group: root
    mode: 0644

- name: Create wildfly launcher
  template:
    src: launch_wildfly.sh.j2
    dest: '{{wildfly_home}}/bin/launch.sh'
    owner: "{{wildfly_user}}"
    group: root
    mode: 0755

- name: Higher memory limits
  lineinfile:
    path: '{{wildfly_home}}/bin/standalone.conf'
    regexp: '^(.*)Xms(\\d+)m -Xmx(\\d+)(.)(.*)$'
    line: '\1Xms128m -Xmx1024m\5'
    backrefs: yes

- name: Higher MetaSpace memory limits
  lineinfile:
    path: '{{wildfly_home}}/bin/standalone.conf'
    regexp: '^(.*)XX:MaxMetaspaceSize=(\\d+)m(.*)$'
    line: '\1XX:MaxMetaspaceSize=512m\3'
    backrefs: yes

- name: Install ca-certificates hooks for java
  package:
    name: 'ca-certificates-java'
    state: present

- name: Update CA certificates to java keystore
  command: /usr/sbin/update-ca-certificates

- name: Use generated system jks keystore insted of default one
  lineinfile:
    path: '{{wildfly_home}}/bin/standalone.conf'
    line: 'JAVA_OPTS="$JAVA_OPTS -Djavax.net.ssl.trustStore=/etc/ssl/certs/java/cacerts"'

- name: Register application systemd main service
  template:
    src: systemd_unit.j2
    dest: /etc/systemd/system/wildfly.service
    owner: root
    group: root
    mode: 0644

- name: reload deamons for systemd and enable application service
  systemd:
    daemon_reload: yes
    name: "wildfly"
    enabled: yes
    state: started

- name: Define sudo alias to control wildfly service
  lineinfile:
    dest: /etc/sudoers
    state: present
    line: 'Cmnd_Alias WILDFLY_SVC =/bin/systemctl restart wildfly, /bin/systemctl start wildfly,/bin/systemctl stop wildfly, /bin/systemctl status wildfly'
    insertafter: '^# Cmnd '
    validate: visudo -cf %s

- name: Allow sudo control wildfly for deployers group
  lineinfile:
    dest: /etc/sudoers
    state: present
    line: '%{{ wildfly_group }} ALL=(root) WILDFLY_SVC'
    validate: visudo -cf %s

- name: Allow sudo restart wildfly for wildfly_user
  lineinfile:
    dest: /etc/sudoers
    state: present
    line: '{{ wildfly_user }}  ALL=(root) NOPASSWD:WILDFLY_SVC'
    insertafter: '^%{{ wildfly_group }} '
    validate: visudo -cf %s
  when: realmd.sudo_group is defined

- name: Create management users
  shell: >
    {{ wildfly_home }}/bin/add-user.sh -s
    {{ item.name }} {{ item.password }} && touch {{ wildfly_home }}/.mgmt-users.{{ item.name }}.provisioned
  with_items: "{{ wildfly_management_users }}"
  # become: True
  # become_user: '{{ wildfly_user }}'
  args:
    creates: "{{ wildfly_home }}/.mgmt-users.{{ item.name }}.provisioned"
  when: wildfly_management_users | length > 0
  no_log: True

- name: Enforce secure permissions on password files
  file:
    path: "{{ wildfly_home }}/standalone/configuration/{{ item }}"
    owner: "{{ wildfly_user }}"
    group: "{{ wildfly_group }}"
    mode: "0600"
  with_items:
    - mgmt-groups.properties
    - mgmt-users.properties

- include_tasks: datasource.yml
